{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CompletedFilterPipe {\n  transform(lists, completed) {\n    return lists.filter(listData => {\n      return listData.completed === !completed;\n    });\n  }\n}\nCompletedFilterPipe.ɵfac = function CompletedFilterPipe_Factory(t) {\n  return new (t || CompletedFilterPipe)();\n};\nCompletedFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"completedFilter\",\n  type: CompletedFilterPipe,\n  pure: false\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,mBAAmB;EAE/BC,SAAS,CAACC,KAAa,EAAEC,SAAkB;IAE1C,OAAOD,KAAK,CAACE,MAAM,CAACC,QAAQ,IAAG;MAE9B,OAAOA,QAAQ,CAACF,SAAS,KAAK,CAACA,SAAS;IACzC,CAAC,CAAC;EACH;;;mBARYH,mBAAmB;AAAA;;;QAAnBA,mBAAmB;EAAAM;AAAA","names":["CompletedFilterPipe","transform","lists","completed","filter","listData","pure"],"sourceRoot":"","sources":["C:\\JMTE\\Angular\\05-Wishes\\src\\app\\pipes\\completed-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { List } from '../models/list.model';\n\n@Pipe({\n\tname: 'completedFilter',\n\tpure: false\n})\nexport class CompletedFilterPipe implements PipeTransform {\n\n\ttransform(lists: List[], completed: boolean): List[] {\n\n\t\treturn lists.filter(listData => {\n\n\t\t\treturn listData.completed === !completed\n\t\t});\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}